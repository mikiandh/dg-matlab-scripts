classdef SSP_RK4_5 < TimeIntegrator
    properties (Constant)
        order = 4;
        stageCount = 5;
        amplificationFactorFun = @(z) (265463990952622608150189972344896021762287709730189019808505249429955773138217*z.^5)/59285549689505892056868344324448208820874232148807968788202283012051522375647232 + (617557809265686329792262629871895994724553962772224133823548839147548176662523*z.^4)/14821387422376473014217086081112052205218558037201992197050570753012880593911808 + (2470231237062745899416026889164753911888427586318335394030467413516256206203135*z.^3)/14821387422376473014217086081112052205218558037201992197050570753012880593911808 + (1852673427797059486576953433340741858439650075155231662413332087780857683018485*z.^2)/3705346855594118253554271520278013051304639509300498049262642688253220148477952 + (231584178474632494065353036093698953526959801287985692919653483466816886494293*z)/231584178474632390847141970017375815706539969331281128078915168015826259279872 + 205688069665150948943867075817191687448919604710488653564680541/205688069665150755269371147819668813122841983204197482918576128;
    end
    methods
        %% Constructor
        function ssp_rk4_5 = SSP_RK4_5(varargin)
            ssp_rk4_5@TimeIntegrator(varargin{:});
        end
        %% RK stage update
        function applyStage(this,element,stage)
            switch stage
                case 1
                    element.extraStates{2} = element.states;
                    element.states = ...
                        element.states +...
                        0.391752226571890*this.timeDelta*element.residuals;
                case 2
                    element.states = ...
                        0.444370493651235*element.extraStates{2} +...
                        0.555629506348765*element.states +...
                        0.368410593050371*this.timeDelta*element.residuals;
                case 3
                    element.extraStates{1} = ... % cumulative pseudo-state
                        0.517231671970585*element.states;
                    element.states = ...
                        0.620101851488403*element.extraStates{2} +...
                        0.379898148511597*element.states +...
                        0.251891774271694*this.timeDelta*element.residuals;
                case 4
                    element.extraStates{1} = element.extraStates{1} +...
                        0.096059710526147*element.states +...
                        0.063692468666290*this.timeDelta*element.residuals;
                    element.states = ...
                        0.178079954393132*element.extraStates{2} +...
                        0.821920045606868*element.states +...
                        0.544974750228521*this.timeDelta*element.residuals;
                otherwise
                    element.states = ...
                        element.extraStates{1} +...
                        0.386708617503269*element.states +...
                        0.226007483236906*this.timeDelta*element.residuals;
            end
        end
    end
end