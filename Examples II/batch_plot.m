clc
clear
close all

% This script plots various data sets from one or multiple files.

%% Dependencies
addpath('../../../../Extra')

%% Parameters
% Directory and file names:
fileFolder = 'C:\Users\Miquel Herrera\OneDrive\Masters Degree\MSc\Thesis\Meetings\2019-11-18 DGIGA-AFC vector\CFL criterion';
%fileFolder = '~/OneDrive/Masters Degree/MSc/Thesis/Meetings/2019-11-1 DGIGA-AFC scalar/1_limiting_limitations/1_2_accuracy/error_vs_dt_p5';
fileNames = {'gauss_DGSEM_RK3'};
fileExtension = '.dat';
% Datasets to plot:
x = @(data,Nx,Ns,p) data.dt(data.patches == Nx & data.spans == Ns & data.p == p);
y = @(data,Nx,Ns,p) data.error(data.patches == Nx & data.spans == Ns & data.p == p);
% Colors, markers and names:
color = distinguishable_colors(30);
%marker = {'^','s','p','o','>','d','h'};
%names = {'SSP-RK1','SSP-RK2','SSP-RK3','SSP-RK4(5)','SSP-RK4(10)'};

%% Check file location
if ~isdir(fileFolder)
  errorMessage = sprintf('Error: The following folder does not exist:\n%s', fileFolder);
  uiwait(warndlg(errorMessage));
  return;
end

%% Batch plot
figure('Renderer', 'painters', 'Position', [300 100 700 400])
hold all
i = 0;
for fileName = fileNames
    i = i + 1;
    data = importDataFromFile(fullfile(fileFolder,[fileName{:} fileExtension]));
    j = 0;
    for Nx = [20]
        for Ns = [1]
            for p = 0:29
                j = j + 1;
                plot(x(data,Nx,Ns,p),y(data,Nx,Ns,p),'-',...
                    'Color',color(j,:),...
                    'DisplayName',...
                    ['N_x = ' num2str(Nx)...
                    ', N_{\Sigma} = ' num2str(Ns)...
                    ', p = ' num2str(p)]);
            end
        end
    end
end
hold off
setFancyPlotSettings1
legend('-DynamicLegend','Location','Best')
% Extras:
set(gca, 'XScale', 'log')
set(gca, 'YScale', 'log')
xlabel('Time-step size')
ylabel('L2 error, Gauss pulse')
title('DGIGA')
%xlim([5e-7 5e-1])
ylim([1e-6 1e-0])

%% Import function
function data = importDataFromFile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   DATA = IMPORTFILE(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   DATA = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads
%   data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   DATA = importfile('DGIGA_AFC_rectangular_RK1.dat', 2, 26);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/10/30 11:26:42

% Initialize variables:
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end
% Format for each line of text:
formatSpec = '%f%f%f%f%f%f%f%f%[^\n\r]';
% Open the text file:
fileID = fopen(filename,'r');
% Read columns of data according to the format:
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end
% Close the text file:
fclose(fileID);
% Create output variable:
data = table(dataArray{1:end-1}, 'VariableNames', {'ID','dt','patches','spans','p','DOFs','error','WCT'});
end